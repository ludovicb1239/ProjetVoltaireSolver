<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label11.Text" xml:space="preserve">
    <value>À savoir:
- Le programme automatique s'arrête automatiquement s'il voit qu'il a fait une erreur
- Le programme n'est pas infaible, il se pourrait qu'il ne soit pas en mesure de bien corriger une erreur
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>